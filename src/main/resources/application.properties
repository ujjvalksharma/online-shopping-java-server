#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# have a database created by name BurgerApp on port 3306
#spring.datasource.url = jdbc:mysql://localhost:3306/cyu 
#spring.datasource.username = root
#spring.datasource.password = ujjval123
#spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#server.port=9001
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=create-drop
server.error.include-message = always
spring.datasource.url=<database-url>
spring.datasource.username=<database-username>
spring.datasource.password=<database-password>
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
# spring.jpa.hibernate.ddl-auto=create # remove this comment if you want to create table

############### MongoDb creditionals

#spring.data.mongodb.host=localhost
spring.data.mongodb.uri=<dataable-uri>
#spring.data.mongodb.port=27017
spring.data.mongodb.database=cyu
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
